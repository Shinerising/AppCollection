var T=Object.defineProperty;var E=(n,e,t)=>e in n?T(n,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[e]=t;var u=(n,e,t)=>(E(n,typeof e!="symbol"?e+"":e,t),t);(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const a of document.querySelectorAll('link[rel="modulepreload"]'))c(a);new MutationObserver(a=>{for(const s of a)if(s.type==="childList")for(const i of s.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&c(i)}).observe(document,{childList:!0,subtree:!0});function t(a){const s={};return a.integrity&&(s.integrity=a.integrity),a.referrerPolicy&&(s.referrerPolicy=a.referrerPolicy),a.crossOrigin==="use-credentials"?s.credentials="include":a.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function c(a){if(a.ep)return;a.ep=!0;const s=t(a);fetch(a.href,s)}})();class o{}u(o,"URL","app.awayne.me"),u(o,"Owner","Shinerising"),u(o,"API","https://github-api.crscd.net/api"),u(o,"User","https://github-api.crscd.net/users"),u(o,"Content","https://github-api.crscd.net/content"),u(o,"Download","https://github-api.crscd.net/download");const y={en:{SITE_TITLE:"Application Collection",PAGE_TITLE:"Application Collection",BRIEF_NULL:"No brief.",BUTTON_DOCUMENT:"Document",BUTTON_PREVIEW:"Preview",BUTTON_PACKAGE:"Package",BUTTON_GITHUB:"Source code",BUTTON_DEMO:"Demo",SEARCH_PLACEHOLDER:"Search",LABEL_PREVIEW:"Preview",LABEL_PLATFORM_ALL:"All"},zh:{SITE_TITLE:"软件集合",PAGE_TITLE:"科研成果及应用软件合集",BRIEF_NULL:"暂无简介。",BUTTON_DOCUMENT:"查看说明文档",BUTTON_PREVIEW:"下载预览版本",BUTTON_PACKAGE:"下载",BUTTON_GITHUB:"查看源代码",BUTTON_DEMO:"查看示例",SEARCH_PLACEHOLDER:"关键词搜索",LABEL_PREVIEW:"预览版本",LABEL_PLATFORM_ALL:"全平台"}},L=navigator.language.startsWith("zh")?"zh":"en",g=y[L],l=n=>g[n];class _{static async timeout(e){return new Promise(t=>{setTimeout(()=>{t(!0)},e)})}static async nextFrame(){return new Promise(e=>{requestAnimationFrame(()=>{e(!0)})})}}class ${static async startFetching(){const e=await this.fetchData("list.json");f.card.addClass("visible");const t=await this.fetchData(`${o.User}/${o.Owner}/packages?package_type=container`);e.map(async c=>{const a=document.createElement("section");a.addClass("repo"),f.collection.appendChild(a);try{const s=await this.fetchData(`${o.API}/${o.Owner}/${c.name}`),i=await this.fetchData(`${o.API}/${o.Owner}/${c.name}/releases`),h=this.generateNode(c,s,i,t.filter(d=>d.repository.full_name===s.full_name));await this.applyNode(a,h)}catch{a.remove()}})}static async applyNode(e,t){e.innerHTML+=t,await _.nextFrame(),e.addClass("visible")}static generateNode(e,t,c,a=[]){var d,r;const s=c.filter(p=>!p.prerelease)[0],i=c.filter(p=>p.prerelease)[0],h=a.map(p=>`<a class="link-github icon-docker" href="${p.html_url}">${p.name}</a>`);return`
<div class="repo-cover">
<img src="${o.Content}/${t.full_name}/contents/preview.jpg" alt="${t.description}"/>
</div>
<div class="repo-info">
<div class="repo-header">
<div class="repo-icon">
<img src="${o.Content}/${t.full_name}/contents/icon.png" alt="${t.name}">
</div>
<div class="repo-labelbox">
<span>${t.language}</span>${t.topics.map(p=>`<span>${p}</span>`).join("")}
</div>
<h2 class="repo-title"><a href="${t.html_url}">${e.locale?((d=e.locale[L])==null?void 0:d.full_name)||e.full_name:e.full_name||t.name}</a></h2>
</div>
<ul class="repo-property">
<li class="icon-desktop" title="Platform">${e.platform==="All"?l("LABEL_PLATFORM_ALL"):e.platform}</li>
<li class="icon-tag" title="Latest version">${(s==null?void 0:s.tag_name.toUpperCase())||l("LABEL_PREVIEW")}</li>
<li class="icon-file-code-o" title="Code size">${this.getSize(t.size)}</li>
<li class="icon-calendar" title="Updated time">${this.timeDifference(new Date().getTime(),new Date(t.pushed_at).getTime())}</li>
</ul>
<p class="repo-description">${e.locale?((r=e.locale[L])==null?void 0:r.description)||t.description:t.description??l("BRIEF_NULL")}</p>
<div class="repo-document">
<a class="link icon-github" href="${t.html_url}">${l("BUTTON_GITHUB")}</a>
<a class="link icon-book" href="${e.document}">${l("BUTTON_DOCUMENT")}</a>
<a class="link icon-globe" href="${e.demo??""}">${l("BUTTON_DEMO")}</a>
</div>
<div class="empty"></div>
</div>
<div class="repo-link">
<a class="link-github icon-download" href="${i!=null&&i.assets[0]?`${i.assets[0].url.replace("https://api.github.com/repos",o.Download)}?file=${i.assets[0].name}`:""}">${l("BUTTON_PREVIEW")}</a>
<a class="link-github icon-download" href="${s!=null&&s.assets[0]?`${s.assets[0].url.replace("https://api.github.com/repos",o.Download)}?file=${s.assets[0].name}`:""}">${l("BUTTON_PACKAGE")} ${(s==null?void 0:s.tag_name.toUpperCase())||"Release"}</a>
${h}
</div>
    `}static async fetchData(e){return await fetch(e).then(t=>t.json()).then(t=>t)}static getSize(e){return e<1024?e+"KB":Math.round(e/1024)+"MB"}static timeDifference(e,t){const c=new Intl.RelativeTimeFormat(navigator.language||"en"),a=60*1e3,s=a*60,i=s*24,h=i*30,d=i*365,r=e-t;return r<a?c.format(Math.round(r/1e3)*-1,"second"):r<s?c.format(Math.round(r/a)*-1,"minute"):r<i?c.format(Math.round(r/s)*-1,"hour"):r<h?c.format(Math.round(r/i)*-1,"day"):r<d?c.format(Math.round(r/h)*-1,"month"):c.format(Math.round(r/d)*-1,"year")}}const m=class m{static load(){this.card=document.querySelector(".card"),this.collection=document.querySelector(".collection"),this.searchBox=document.querySelector("#textInput"),this.searchBox.placeholder=l("SEARCH_PLACEHOLDER"),m.query("title").textContent=l("SITE_TITLE"),m.query("#sitename").textContent=l("PAGE_TITLE")}static query(e){return document.querySelector(e)}static queryAll(e){return document.querySelectorAll(e)}};u(m,"card"),u(m,"collection"),u(m,"searchBox");let f=m;HTMLElement.prototype.addClass=function(n){this.classList.contains(n)||this.classList.add(n)};HTMLElement.prototype.removeClass=function(n){this.classList.contains(n)&&this.classList.remove(n)};HTMLElement.prototype.toggleClass=function(n){this.classList.contains(n)?this.classList.remove(n):this.classList.add(n)};HTMLElement.prototype.val=function(n){return n===""?this.value="":n&&(this.value=n),this.value};class A{async start(){await this.waitDocumentReady(),f.load(),$.startFetching(),this.enableSearching()}enableSearching(){let e="";setInterval(()=>{var a;const t=(a=f.searchBox.val())==null?void 0:a.trim().toLowerCase();if(e===t)return;e=t,document.querySelectorAll(".repo").forEach(s=>{var d;if(!t){s.classList.remove("filtered");return}const i=(d=s.textContent)==null?void 0:d.toLowerCase(),h=[...s.querySelectorAll("a")].map(r=>r.href).join(" ").toLowerCase();i!=null&&i.includes(t)||h.includes(t)?s.classList.remove("filtered"):s.classList.add("filtered")})},500)}waitDocumentReady(){return new Promise(e=>{if(document.readyState==="complete"||document.readyState==="interactive")e(!0);else{const t=()=>{document.removeEventListener("DOMContentLoaded",t),e(!0)};document.addEventListener("DOMContentLoaded",t)}})}}const v=new A;v.start();
